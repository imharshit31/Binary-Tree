#include <bits/stdc++.h>
using namespace std;

struct TreeNode{
    
    int val;
    TreeNode *left, *right;
    
    TreeNode(int x){
        val=x;
        left=NULL;
        right=NULL;
    }
    
};

static bool compu(pair<int,int> &a, pair<int,int> &b){
    if(a.second==b.second){
        return a.first<b.first;
    }
    return a.second<b.second;
}

map<int,vector<pair<int,int>>> mp;

void inorder(TreeNode* root, int x, int y){
    
    if(!root) return;

    inorder(root->left,x-1,y+1);
    mp[x].push_back({root->val,y});
    inorder(root->right,x+1,y+1);
}
    
void verticalOrder(TreeNode* root, vector<vector<int>> &ans) {
    
    inorder(root,0,0);
    
    for(auto a: mp){
        vector<pair<int,int>> vp=a.second;
        sort(vp.begin(),vp.end(),compu);
        vector<int> temp;
        for(auto aa: vp) temp.push_back(aa.first);
        ans.push_back(temp);
    }
}

int main() {
    
    TreeNode *root = new TreeNode(1);
    root->left= new TreeNode(2);
    root->right= new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    
    vector<vector<int>> ans;
    
    verticalOrder(root,ans);
    
    for(auto a: ans){
        for(auto aa: a) cout<<aa<<" ";
        cout<<endl;
    }
    
    return 0;
}
