#include <bits/stdc++.h>
using namespace std;

struct TreeNode{
    
    int val;
    TreeNode *left, *right;
    
    TreeNode(int x){
        val=x;
        left=NULL;
        right=NULL;
    }
    
};

map<int,pair<int,int>> mp;

void inorder(TreeNode *root, int x, int y){
    if(!root) return;
    
    inorder(root->left,x-1,y+1);
    
    auto it = mp.find(x);
    if(it != mp.end()){
        if(mp[x].second>y) mp[x]={root->val,y};
    }
    else{
        mp[x]={root->val,y};
    }
    
    inorder(root->right,x+1,y+1);
}
    
void topView(TreeNode* root, vector<int> &ans) {
    
    inorder(root,0,0);
    
    for(auto a: mp){
        ans.push_back(a.second.first);
    }
}

int main() {
    
    TreeNode *root = new TreeNode(1);
    root->left= new TreeNode(2);
    root->right= new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    
    vector<int> ans;
    
    topView(root,ans);
    
    for(auto a: ans) cout<<a<<" ";
    
    
    return 0;
}
