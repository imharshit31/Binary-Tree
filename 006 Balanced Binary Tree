#include <bits/stdc++.h>
using namespace std;

struct TreeNode{
    
    int val;
    TreeNode *left, *right;
    
    TreeNode(int x){
        val=x;
        left=NULL;
        right=NULL;
    }
    
};

int height(TreeNode *root){
    if(!root) return 0;
    return 1+ max(height(root->left),height(root->right));
}

bool balancedBT(TreeNode* root){
    if(!root) return true;
    int lh = height(root->left);
    int rh = height(root->right);
    if(abs(lh-rh)<=1 and balancedBT(root->left) and balancedBT(root->right)) return true;
    return false;
    
}

int balancedBTOpt(TreeNode *root) {
    if (!root) return 0;
    int lh = balancedBTOpt (root -> left);
    int rh = balancedBTOpt (root -> right);
    if (lh ==-1 or rh==-1 or abs(lh - rh) > 1)  return -1;
    return 1+max (lh, rh);
}

int main() {
    
    TreeNode *root = new TreeNode(1);
    root->left= new TreeNode(2);
    root->right= new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    
    cout<<(bool) (balancedBTOpt(root) != -1);
    
    return 0;
}
