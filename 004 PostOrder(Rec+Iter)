#include <bits/stdc++.h>
using namespace std;

struct TreeNode{
    
    int val;
    TreeNode *left, *right;
    
    TreeNode(int x){
        val=x;
        left=NULL;
        right=NULL;
    }
    
};

void postorder(TreeNode *root){
    if(!root) return;
    
    postorder(root->left);
    postorder(root->right);
    cout<<root->val<<" ";
    
}

void postorderIter(TreeNode *root, vector<int> &v){
    if(!root) return;
    
    stack<TreeNode*> stk1;
    stack<int> stk2;
    stk1.push(root);
    
    while(stk1.size()){
        TreeNode *curr = stk1.top();
        stk1.pop();
        //stk2.push(curr->val);
        v.push_back(curr->val);
        if(curr->left) stk1.push(curr->left);
        if(curr->right) stk1.push(curr->right);
    }
    
    // while(stk2.size()){
    //     v.push_back(stk2.top());
    //     stk2.pop();
    // }
    
}

void postorderIter2(TreeNode *root, vector<int> &v){
    
    if(!root) return;
    
    stack<TreeNode*> stk;
    TreeNode* node = root;
    
    while(true){
        if(node){
            stk.push(node);
            node=node->left;
        }else{
            node = stk.top()->right;
            if(!node){
                node=stk.top();
                v.push_back(node->val);
                stk.pop();
                node=NULL;
            }
        }
    }
    
    // CHORO ABHI KE LIYE
    
}

int main() {
    
    TreeNode *root = new TreeNode(1);
    root->left= new TreeNode(2);
    root->right= new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    
    return 0;
}
