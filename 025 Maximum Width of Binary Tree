#include <bits/stdc++.h>
using namespace std;

struct TreeNode{
    
    int val;
    TreeNode *left, *right;
    
    TreeNode(int x){
        val=x;
        left=NULL;
        right=NULL;
    }
    
};

int maximumWidth(TreeNode* root) {
    
    if(!root) return 0;
    
    int maxi = 1;
    queue<pair<TreeNode*, int>> q;
    q.push({root, 0});
    
    while(!q.empty()){
        
        int size = q.size(),start = q.front().second,end=0;
        
        while(size--){
            
            pair<TreeNode*, int> curr = q.front();
            int nval = curr.second - start;
            q.pop();
            
            maxi=max(maxi,curr.second-start+1);
            
            if(curr.first->left) q.push({curr.first->left, (long long)2*nval + 1});
            if(curr.first->right) q.push({curr.first->right, (long long)2*nval + 2});
            
        }
    }
    
    return maxi;
    
}

int main() {
    
    TreeNode *root = new TreeNode(1);
    root->left= new TreeNode(2);
    root->right= new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->right = new TreeNode(6);
    
    cout<<maximumWidth(root)<<endl;
    
    return 0;
}
